name: Kogito Operator PR Checks
on:
  pull_request:
    paths-ignore:
      - "README.md"
      - "examples/**"
      - "LICENSE"
      - "Makefile"
    branches:
      - master
env:
  OPERATOR_SDK_VERSION: v0.18.2
  GO_VERSION: 1.14
jobs:
  golint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GOLANG_LINT_VERSION: v1.27.0
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod/cache
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-cache-
      - name: Cache the binaries
        uses: actions/cache@v1
        with:
          path: ~/go/bin/
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}
      - name: Install Operator-sdk
        run: ./hack/ci/install-operator-sdk.sh
      - name: Check Vet
        run: |
          ./hack/go-vet.sh
          changed_files=$(git status -s | grep -v 'go.mod\|go.sum' || :)
          generated_changed_files=$(git status -s | grep zz_generated || :)
          [[ -z "$generated_changed_files" ]] || (printf "There is change in auto-generated files, Please make sure to upgrade openapi-gen" && exit 1)
          [[ -z "$changed_files" ]] ||  (printf "Change is detected in some files: \n$changed_files\n Did you run 'make test' before sending the PR?" && exit 1)

      - name: Check Headers
        run: |
          ./hack/addheaders.sh
          changed_files=$(git status -s | grep -v 'go.mod\|go.sum' || :)
          [[ -z "$changed_files" ]] ||  (printf "Some files are missing the headers: \n$changed_files\n Did you run 'make test' before sending the PR" && exit 1)
      - name: Check Formatting
        run: |
          ./hack/go-fmt.sh
          changed_files=$(git status -s | grep -v 'go.mod\|go.sum' || :)
          [[ -z "$changed_files" ]] ||  (printf "Some files are not formatted properly: \n$changed_files\n Did you run 'make test' before sending the PR?" && exit 1)
      - name: Install golinters
        run: |
          go get -u golang.org/x/lint/golint
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin $GOLANG_LINT_VERSION
      - name: Check lint
        run: ./hack/go-lint.sh

  bats_test:
    name: Bats Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core && ./install.sh $HOME
      - name: Run Bats
        run: $HOME/bin/bats hack/*.bats
  bdd_tests:
    name: BDD tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod/cache
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-cache-
      - name: Cache the binaries
        uses: actions/cache@v1
        with:
          path: ~/go/bin/
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}
      - name: Cache Go mod
        uses: actions/cache@v1
        with:
          path: go.mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.mod') }}
          restore-keys: |
              ${{ runner.os }}-go-mod-

      - run: go mod tidy
      - name: Intall Operator-sdk
        run: ./hack/ci/install-operator-sdk.sh
      - name: Install Kind
        run: ./hack/ci/install-kind.sh
      - name: Start Kind with Ingress and internal registry conf
        run: ./hack/ci/kind-with-registry-and-ingress.sh
      - name: Install Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=3m
      - name: Update Ingress CM
        run: kubectl patch configmaps ingress-nginx-controller --patch "$(cat hack/ci/config-map-patch.yaml)" -n ingress-nginx
      - name: Verfify CM update
        run: kubectl get cm/ingress-nginx-controller -o yaml -n ingress-nginx | grep data -A2
      - name: Install OLM
        run: |
          kubectl apply -f https://raw.githubusercontent.com/operator-framework/operator-lifecycle-manager/master/deploy/upstream/quickstart/crds.yaml
          sleep 5
          kubectl apply -f https://raw.githubusercontent.com/operator-framework/operator-lifecycle-manager/master/deploy/upstream/quickstart/olm.yaml
      - name: Wait OLM to be ready
        run: |
          kubectl wait --namespace olm \
          --for=condition=ready pod \
          --selector=app=olm-operator \
          --timeout=3m
      - name: Genrate Manifests
        run: ./hack/generate-manifests.sh
      - name: Build Operator Image
        env:
          BUILDER: docker
        run: ./hack/go-build.sh
      - name: Tag Operator Image to registry
        run: |
          source ./hack/export-version.sh
          docker tag quay.io/kiegroup/kogito-cloud-operator:"${OP_VERSION}" localhost:5000/kiegroup/kogito-cloud-operator
      - name: Push operator image to internal registry
        run: docker push localhost:5000/kiegroup/kogito-cloud-operator
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          java-package: jdk
      - name: Build example images
        run: ./hack/ci/build-image-examples-kind.sh
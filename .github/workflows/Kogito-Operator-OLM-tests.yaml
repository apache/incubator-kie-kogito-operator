name: Kogito Operator OLM Checks
on:
  pull_request:
    paths:
      - 'deploy/**'
      - 'pkg/**'
      - 'cmd/**'
  push:
    paths:
      - 'deploy/**'
      - 'pkg/**'
      - 'cmd/**'
    branches:
      - master
env:
  OPERATOR_SDK_VERSION: v0.18.2
  GO_VERSION: 1.14
jobs:
  olm_integration:
    name: OLM Integration Test
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: operator-test
      KIND_VERSION: v0.8.1
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod/cache
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-cache-
      - name: Cache the binaries
        uses: actions/cache@v1
        with:
          path: ~/go/bin/
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}
      - name: Cache Go mod
        uses: actions/cache@v1
        with:
          path: go.mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-
      - run: go mod tidy
      - name: Intall Operator-sdk
        run: ./hack/ci/install-operator-sdk.sh
      - name: Install Kind
        run: ./hack/ci/install-kind.sh
      - name: Start Kind
        run: ./hack/ci/start-kind.sh
      - name: Genrate Manifests
        run: ./hack/generate-manifests.sh
      - name: Build Operator Image
        env:
          BUILDER: docker
        run: ./hack/go-build.sh
      - name: Load Operator Image
        run: ./hack/ci/load-operator-image.sh
      - name: Run Operator OLM Integration Test
        run: ./hack/ci/operator-olm-test.sh
# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  lint:
    docker:
      - image: circleci/golang:1.13
        environment:
          - GO111MODULE=on
          - GOLANG_LINT_VERSION=v1.27.0
    working_directory: /go/src/github.com/kiegroup/kogito-cloud-operator
    steps:
      - checkout
      - run:
          name: Check Formatting
          command: |
            ./hack/go-fmt.sh
            changed_files=$(git status -s)
            [[ -z "$changed_files" ]] ||  (printf "Some files are not formatted properly: \n$changed_files\n Please make sure to run `make test` before sending the PR" && exit 1)
      - run:
          name: Check Headers
          command: |
            ./hack/addheaders.sh
            changed_files=$(git status -s | grep -v 'go.mod\|go.sum' || :)
            [[ -z "$changed_files" ]] ||  (printf "Some files are missing the headers: \n$changed_files\n Please make sure to run `make test` before sending the PR" && exit 1)
      - run: go get -u golang.org/x/lint/golint
      - run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin $GOLANG_LINT_VERSION
      - run: ./hack/go-lint.sh

  unit_test_and_coverage:
    docker:
      - image: circleci/golang:1.13
        environment:
          - GO111MODULE=on
          - MIN_COVERAGE=50
          - CGO_ENABLED=0
    working_directory: /go/src/github.com/kiegroup/kogito-cloud-operator
    steps:
      - run: sudo apt install bc
      - run: go get golang.org/x/tools/cmd/cover
      - checkout
      - run: go mod tidy
      - run: go vet ./...
      - run: go test ./cmd/... -count=1 -p=1 -coverprofile=cmd-coverage.out
      - run: ./hack/coverage.sh cmd-coverage.out
      - store_artifacts:
          path: cmd-coverage.out
      - run: go test ./pkg/... -count=1 -p=1 -coverprofile=pkg-coverage.out
      - run: ./hack/coverage.sh pkg-coverage.out
      - store_artifacts:
          path: pkg-coverage.out
  bats_test:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/kiegroup/kogito-cloud-operator
    steps:
      - checkout
      - run: git clone https://github.com/bats-core/bats-core.git
      - run: cd bats-core && ./install.sh $HOME
      - run: $HOME/bin/bats hack/*.bats
workflows:
  version: 2
  pr_check:
    jobs:
      - lint
      - unit_test_and_coverage:
          requires:
            - lint
      - bats_test:
          requires:
            - lint
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitobuilds.app.kiegroup.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.type
    description: Type of this build instance
    name: Type
    type: string
  - JSONPath: .spec.runtime
    description: Runtime used to build the service
    name: Runtime
    type: string
  - JSONPath: .spec.native
    description: Indicates it's a native build
    name: Native
    type: boolean
  - JSONPath: .spec.mavenMirrorURL
    description: URL for the proxy Maven repository
    name: Maven URL
    type: string
  - JSONPath: .spec.targetKogitoRuntime
    description: Target KogitoRuntime for this build
    name: Kogito Runtime
    type: string
  - JSONPath: .spec.gitSource.uri
    description: Git repository URL (RemoteSource builds only)
    name: Git Repository
    type: string
  group: app.kiegroup.org
  names:
    kind: KogitoBuild
    listKind: KogitoBuildList
    plural: kogitobuilds
    singular: kogitobuild
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KogitoBuild handles how to build a custom Kogito service in a Kubernetes/OpenShift
        cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoBuildSpec defines the desired state of KogitoBuild.
          properties:
            artifact:
              description: Artifact contains override information for building the
                Maven artifact (used for Local Source builds). You might want to override
                this information when building from decisions, rules or process files.
                In this scenario the Kogito Images will generate a new Java project
                for you underneath. This information will be used to generate this
                project.
              properties:
                artifactId:
                  description: Indicates the unique base name of the primary artifact
                    being generated.
                  type: string
                groupId:
                  description: Indicates the unique identifier of the organization
                    or group that created the project.
                  type: string
                version:
                  description: Indicates the version of the artifact generated by
                    the project.
                  type: string
              type: object
            buildImage:
              description: 'Image used to build the Kogito Service from source (Local
                and Remote). The operator will use the one provided by the Kogito
                Team based on the "Runtime" field. Example: "quay.io/kiegroup/kogito-jvm-builder:latest".
                On OpenShift an ImageStream will be created in the current namespace
                pointing to the given image.'
              type: string
            disableIncremental:
              description: DisableIncremental indicates that source to image builds
                should NOT be incremental. Defaults to false.
              type: boolean
            enableMavenDownloadOutput:
              description: If set to true will print the logs for downloading/uploading
                of maven dependencies. Defaults to false.
              type: boolean
            env:
              description: Environment variables used during build time.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
              x-kubernetes-list-type: atomic
            gitSource:
              description: Information about the git repository where the Kogito Service
                source code resides. Ignored for binary builds.
              properties:
                contextDir:
                  description: Context/subdirectory where the code is located, relative
                    to the repo root.
                  type: string
                reference:
                  description: Branch to use in the Git repository.
                  type: string
                uri:
                  description: Git URI for the s2i source.
                  type: string
              required:
              - uri
              type: object
            mavenMirrorURL:
              description: Maven Mirror URL to be used during source-to-image builds
                (Local and Remote) to considerably increase build speed.
              type: string
            native:
              description: Native indicates if the Kogito Service built should be
                compiled to run on native mode when Runtime is Quarkus (Source to
                Image build only). For more information, see https://www.graalvm.org/docs/reference-manual/aot-compilation/.
              type: boolean
            resources:
              description: Resources Requirements for builder pods.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            runtime:
              description: 'Which runtime Kogito service base image to use when building
                the Kogito service. If "BuildImage" is set, this value is ignored
                by the operator. Default value: quarkus.'
              enum:
              - quarkus
              - springboot
              type: string
            runtimeImage:
              description: 'Image used as the base image for the final Kogito service.
                This image only has the required packages to run the application.
                For example: quarkus based services will have only JVM installed,
                native services only the packages required by the OS. The operator
                will use the one provided by the Kogito Team based on the "Runtime"
                field. Example: "quay.io/kiegroup/kogito-jvm-builder:latest". On OpenShift
                an ImageStream will be created in the current namespace pointing to
                the given image.'
              type: string
            targetKogitoRuntime:
              description: Set this field targeting the desired KogitoRuntime when
                this KogitoBuild instance has a different name than the KogitoRuntime.
                By default this KogitoBuild instance will generate a final image named
                after its own name (.metadata.name). On OpenShift, an ImageStream
                will be created causing a redeployment on any KogitoRuntime with the
                same name. On Kubernetes, the final image will be pushed to the KogitoRuntime
                deployment. If you have multiple KogitoBuild instances (let's say
                BinaryBuildType and Remote Source), you might need that both target
                the same KogitoRuntime. Both KogitoBuilds will update the same ImageStream
                or generate a final image to the same KogitoRuntime deployment.
              type: string
            type:
              description: 'Sets the type of build that this instance will handle:
                Binary - takes an uploaded binary file already compiled and creates
                a Kogito service image from it. RemoteSource - pulls the source code
                from a Git repository, builds the binary and then the final Kogito
                service image. LocalSource - takes an uploaded resource file such
                as DRL (rules), DMN (decision) or BPMN (process), builds the binary
                and the final Kogito service image.'
              enum:
              - Binary
              - RemoteSource
              - LocalSource
              type: string
            webHooks:
              description: WebHooks secrets for source to image builds based on Git
                repositories (Remote Sources).
              items:
                description: WebHookSecret Secret to use for a given webHook.
                properties:
                  secret:
                    description: Secret value for webHook
                    type: string
                  type:
                    description: WebHook type, either GitHub or Generic.
                    enum:
                    - GitHub
                    - Generic
                    type: string
                type: object
              type: array
              x-kubernetes-list-type: atomic
          required:
          - type
          type: object
        status:
          description: KogitoBuildStatus defines the observed state of KogitoBuild.
          properties:
            builds:
              description: History of builds
              properties:
                cancelled:
                  description: Builds have been stopped from executing.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                complete:
                  description: Builds have executed and succeeded.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                error:
                  description: Builds have been prevented from executing by an error.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                failed:
                  description: Builds have executed and failed.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                new:
                  description: Builds are being created.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                pending:
                  description: Builds are about to start running.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                running:
                  description: Builds are running.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
              type: object
            conditions:
              description: History of conditions for the resource, shows the status
                of the younger builder controlled by this instance
              items:
                description: KogitoBuildConditions describes the conditions for this
                  build instance according to Kubernetes status interface.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime ...
                    format: date-time
                    type: string
                  message:
                    description: Message ...
                    type: string
                  reason:
                    description: Reason of this condition
                    type: string
                  status:
                    description: Status ...
                    type: string
                  type:
                    description: Type of this condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
              x-kubernetes-list-type: atomic
            latestBuild:
              type: string
          required:
          - builds
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitoinfras.app.kiegroup.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.resource.name
    description: Third Party Infrastructure Resource
    name: Resource Name
    type: string
  - JSONPath: .spec.resource.kind
    description: Kubernetes CR Kind
    name: Kind
    type: string
  - JSONPath: .spec.resource.apiVersion
    description: Kubernetes CR API Version
    name: API Version
    type: string
  - JSONPath: .status.condition.status
    description: General Status of this resource bind
    name: Status
    type: string
  - JSONPath: .status.condition.reason
    description: Status reason
    name: Reason
    type: string
  group: app.kiegroup.org
  names:
    kind: KogitoInfra
    listKind: KogitoInfraList
    plural: kogitoinfras
    singular: kogitoinfra
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: 'KogitoInfra is the resource to bind a Custom Resource (CR) not
        managed by Kogito Operator to a given deployed Kogito service. It holds the
        reference of a CR managed by another operator such as Strimzi. For example:
        one can create a Kafka CR via Strimzi and link this resource using KogitoInfra
        to a given Kogito service (custom or supporting, such as Data Index). Please
        refer to the Kogito Operator documentation (https://docs.jboss.org/kogito/release/latest/html_single/)
        for more information.'
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoInfraSpec defines the desired state of KogitoInfra.
          properties:
            resource:
              description: 'Resource for the service. Example: Infinispan/Kafka/Keycloak.'
              properties:
                apiVersion:
                  description: APIVersion describes the API Version of referred Kubernetes
                    resource for example, infinispan.org/v1
                  type: string
                kind:
                  description: Kind describes the kind of referred Kubernetes resource
                    for example, Infinispan
                  type: string
                name:
                  description: Name of referred resource.
                  type: string
                namespace:
                  description: Namespace where referred resource exists.
                  type: string
              required:
              - apiVersion
              - kind
              type: object
          type: object
        status:
          description: KogitoInfraStatus defines the observed state of KogitoInfra.
          properties:
            appProps:
              additionalProperties:
                type: string
              description: Application properties extracted from the linked resource
                that will be added to the deployed Kogito service.
              type: object
              x-kubernetes-map-type: atomic
            condition:
              description: KogitoInfraCondition ...
              properties:
                lastTransitionTime:
                  description: LastTransitionTime ...
                  format: date-time
                  type: string
                message:
                  description: Message ...
                  type: string
                reason:
                  description: Reason ...
                  type: string
                status:
                  description: Status ...
                  type: string
                type:
                  description: Type ...
                  type: string
              required:
              - status
              - type
              type: object
            env:
              description: Environment variables extracted from the linked resource
                that will be added to the deployed Kogito service.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
              x-kubernetes-list-type: atomic
            volumes:
              description: List of volumes that should be added to the services bound
                to this infra instance
              items:
                description: KogitoInfraVolume describes the data structure for volumes
                  that should be mounted in the given service provided by this infra
                  instance
                properties:
                  mount:
                    description: Mount is the Kubernetes VolumeMount referenced by
                      this instance
                    properties:
                      mountPath:
                        description: Path within the container at which the volume
                          should be mounted.  Must not contain ':'.
                        type: string
                      mountPropagation:
                        description: mountPropagation determines how mounts are propagated
                          from the host to container and the other way around. When
                          not set, MountPropagationNone is used. This field is beta
                          in 1.10.
                        type: string
                      name:
                        description: This must match the Name of a Volume.
                        type: string
                      readOnly:
                        description: Mounted read-only if true, read-write otherwise
                          (false or unspecified). Defaults to false.
                        type: boolean
                      subPath:
                        description: Path within the volume from which the container's
                          volume should be mounted. Defaults to "" (volume's root).
                        type: string
                      subPathExpr:
                        description: Expanded path within the volume from which the
                          container's volume should be mounted. Behaves similarly
                          to SubPath but environment variable references $(VAR_NAME)
                          are expanded using the container's environment. Defaults
                          to "" (volume's root). SubPathExpr and SubPath are mutually
                          exclusive.
                        type: string
                    required:
                    - mountPath
                    - name
                    type: object
                  volume:
                    description: NamedVolume describes the pod Volume reference
                    properties:
                      configMap:
                        description: ConfigMap represents a configMap that should
                          populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced ConfigMap will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the ConfigMap, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its keys
                              must be defined
                            type: boolean
                        type: object
                      name:
                        description: 'Volume''s name. Must be a DNS_LABEL and unique
                          within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      secret:
                        description: 'Secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits to use on created files
                              by default. Must be a value between 0 and 0777. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in the
                              Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and
                              content is the value. If specified, the listed keys
                              will be projected into the specified paths, and unlisted
                              keys will not be present. If a key is specified which
                              is not present in the Secret, the volume setup will
                              error unless it is marked optional. Paths must be relative
                              and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits to use on this
                                    file, must be a value between 0 and 0777. If not
                                    specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          optional:
                            description: Specify whether the Secret or its keys must
                              be defined
                            type: boolean
                          secretName:
                            description: 'Name of the secret in the pod''s namespace
                              to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                required:
                - mount
                - volume
                type: object
              type: array
              x-kubernetes-list-type: atomic
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitoruntimes.app.kiegroup.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: Number of replicas set for this service
    name: Replicas
    type: integer
  - JSONPath: .status.image
    description: Image of this service
    name: Image
    type: string
  - JSONPath: .status.externalURI
    description: External URI to access this service
    name: Endpoint
    type: string
  group: app.kiegroup.org
  names:
    kind: KogitoRuntime
    listKind: KogitoRuntimeList
    plural: kogitoruntimes
    singular: kogitoruntime
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KogitoRuntime is a custom Kogito service.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoRuntimeSpec defines the desired state of KogitoRuntime.
          properties:
            config:
              additionalProperties:
                type: string
              description: 'Application properties that will be set to the service.
                For example ''MY_VAR: my_value''.'
              type: object
            deploymentLabels:
              additionalProperties:
                type: string
              description: Additional labels to be added to the Deployment and Pods
                managed by the operator.
              type: object
            enableIstio:
              description: Annotates the pods managed by the operator with the required
                metadata for Istio to setup its sidecars, enabling the mesh. Defaults
                to false.
              type: boolean
            env:
              description: Environment variables to be added to the runtime container.
                Keys must be a C_IDENTIFIER.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
              x-kubernetes-list-type: atomic
            image:
              description: 'Image definition for the service. Example: "quay.io/kiegroup/kogito-service:latest".
                On OpenShift an ImageStream will be created in the current namespace
                pointing to the given image.'
              type: string
            infra:
              description: Infra provides list of dependent KogitoInfra objects.
              items:
                type: string
              type: array
            insecureImageRegistry:
              description: A flag indicating that image streams created by Kogito
                Operator should be configured to allow pulling from insecure registries.
                Usable just on OpenShift. Defaults to 'false'.
              type: boolean
            monitoring:
              description: Create Service monitor instance to connect with Monitoring
                service
              properties:
                path:
                  description: HTTP path to scrape for metrics.
                  type: string
                scheme:
                  description: HTTP scheme to use for scraping.
                  type: string
              type: object
            propertiesConfigMap:
              description: Custom ConfigMap with application.properties file to be
                mounted for the Kogito service. The ConfigMap must be created in the
                same namespace. Use this property if you need custom properties to
                be mounted before the application deployment. If left empty, one will
                be created for you. Later it can be updated to add any custom properties
                to apply to the service.
              type: string
            replicas:
              description: 'Number of replicas that the service will have deployed
                in the cluster. Default value: 1.'
              format: int32
              minimum: 0
              type: integer
            resources:
              description: Defined compute resource requirements for the deployed
                service.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            runtime:
              description: 'The name of the runtime used, either Quarkus or SpringBoot.
                Default value: quarkus'
              enum:
              - quarkus
              - springboot
              type: string
            serviceLabels:
              additionalProperties:
                type: string
              description: Additional labels to be added to the Service managed by
                the operator.
              type: object
          type: object
        status:
          description: KogitoRuntimeStatus defines the observed state of KogitoRuntime.
          properties:
            conditions:
              description: History of conditions for the resource
              items:
                description: Condition is the detailed condition for the resource
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: KogitoServiceConditionReason is the type of reason
                    type: string
                  status:
                    type: string
                  type:
                    description: ConditionType is the type of condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
              x-kubernetes-list-type: atomic
            deploymentConditions:
              description: General conditions for the Kogito Service deployment.
              items:
                description: DeploymentCondition describes the state of a deployment
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of deployment condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            externalURI:
              description: URI is where the service is exposed.
              type: string
            image:
              description: Image is the resolved image for this service.
              type: string
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitosupportingservices.app.kiegroup.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: Number of replicas set for this service
    name: Replicas
    type: integer
  - JSONPath: .status.image
    description: Base image for this service
    name: Image
    type: string
  - JSONPath: .status.externalURI
    description: External URI to access this service
    name: Endpoint
    type: string
  - JSONPath: .spec.serviceType
    description: Supporting Service Type
    name: Service Type
    type: string
  group: app.kiegroup.org
  names:
    kind: KogitoSupportingService
    listKind: KogitoSupportingServiceList
    plural: kogitosupportingservices
    singular: kogitosupportingservice
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KogitoSupportingService deploys the Supporting service in the given
        namespace.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoSupportingServiceSpec defines the desired state of KogitoSupportingService.
          properties:
            config:
              additionalProperties:
                type: string
              description: 'Application properties that will be set to the service.
                For example ''MY_VAR: my_value''.'
              type: object
            deploymentLabels:
              additionalProperties:
                type: string
              description: Additional labels to be added to the Deployment and Pods
                managed by the operator.
              type: object
            env:
              description: Environment variables to be added to the runtime container.
                Keys must be a C_IDENTIFIER.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
              x-kubernetes-list-type: atomic
            image:
              description: 'Image definition for the service. Example: "quay.io/kiegroup/kogito-service:latest".
                On OpenShift an ImageStream will be created in the current namespace
                pointing to the given image.'
              type: string
            infra:
              description: Infra provides list of dependent KogitoInfra objects.
              items:
                type: string
              type: array
            insecureImageRegistry:
              description: A flag indicating that image streams created by Kogito
                Operator should be configured to allow pulling from insecure registries.
                Usable just on OpenShift. Defaults to 'false'.
              type: boolean
            monitoring:
              description: Create Service monitor instance to connect with Monitoring
                service
              properties:
                path:
                  description: HTTP path to scrape for metrics.
                  type: string
                scheme:
                  description: HTTP scheme to use for scraping.
                  type: string
              type: object
            propertiesConfigMap:
              description: Custom ConfigMap with application.properties file to be
                mounted for the Kogito service. The ConfigMap must be created in the
                same namespace. Use this property if you need custom properties to
                be mounted before the application deployment. If left empty, one will
                be created for you. Later it can be updated to add any custom properties
                to apply to the service.
              type: string
            replicas:
              description: 'Number of replicas that the service will have deployed
                in the cluster. Default value: 1.'
              format: int32
              minimum: 0
              type: integer
            resources:
              description: Defined compute resource requirements for the deployed
                service.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            serviceLabels:
              additionalProperties:
                type: string
              description: Additional labels to be added to the Service managed by
                the operator.
              type: object
            serviceType:
              description: 'Defines the type for the supporting service, eg: DataIndex,
                JobsService Default value: JobsService'
              enum:
              - DataIndex
              - Explainability
              - JobsService
              - MgmtConsole
              - TaskConsole
              - TrustyAI
              - TrustyUI
              type: string
          required:
          - serviceType
          type: object
        status:
          description: KogitoSupportingServiceStatus defines the observed state of
            KogitoSupportingService.
          properties:
            conditions:
              description: History of conditions for the resource
              items:
                description: Condition is the detailed condition for the resource
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: KogitoServiceConditionReason is the type of reason
                    type: string
                  status:
                    type: string
                  type:
                    description: ConditionType is the type of condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
              x-kubernetes-list-type: atomic
            deploymentConditions:
              description: General conditions for the Kogito Service deployment.
              items:
                description: DeploymentCondition describes the state of a deployment
                  at a certain point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of deployment condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            externalURI:
              description: URI is where the service is exposed.
              type: string
            image:
              description: Image is the resolved image for this service.
              type: string
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: kogito-operator
rules:
  - apiGroups:
      - ""
      - app.kiegroup.org
      - apps.openshift.io
      - image.openshift.io
      - build.openshift.io
      - rbac.authorization.k8s.io
      - route.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - replicasets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
      - list
      - delete
  - apiGroups:
      - infinispan.org
    resources:
      - infinispans
    verbs:
      - get
      - create
      - list
      - delete
      - watch
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkas
      - kafkatopics
    verbs:
      - get
      - create
      - list
      - delete
      - watch
  - apiGroups:
      - keycloak.org
    resources:
      - keycloaks
    verbs:
      - get
      - create
      - list
      - delete
      - watch
  - apiGroups:
      - apps
    resourceNames:
      - kogito-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - app.kiegroup.org
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - triggers
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
  - apiGroups:
      - sources.knative.dev
    resources:
      - sinkbindings
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
  - apiGroups:
      - integreatly.org
    resources:
      - grafanadashboards
    verbs:
      - get
      - create
      - list
      - delete
      - watch
      - update
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kogito-service-viewer
  annotations:
    org.kie.kogito/managed-by: Kogito Operator
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - get
      - watch
      - update
      - patch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kogito-operator
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kogito-service-viewer
  annotations:
    org.kie.kogito/managed-by: Kogito Operator
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kogito-operator
subjects:
  - kind: ServiceAccount
    name: kogito-operator
roleRef:
  kind: Role
  name: kogito-operator
  apiGroup: rbac.authorization.k8s.io
---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kogito-service-viewer
  annotations:
    org.kie.kogito/managed-by: Kogito Operator
subjects:
  - kind: ServiceAccount
    name: kogito-service-viewer
roleRef:
  kind: Role
  name: kogito-service-viewer
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kogito-operator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: kogito-operator
  template:
    metadata:
      labels:
        name: kogito-operator
    spec:
      serviceAccountName: kogito-operator
      containers:
        - name: kogito-cloud-operator
          image: quay.io/kiegroup/kogito-cloud-operator:1.0.0-snapshot
          command:
            - kogito-cloud-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['name']
            - name: DEBUG
              value: "false"

---

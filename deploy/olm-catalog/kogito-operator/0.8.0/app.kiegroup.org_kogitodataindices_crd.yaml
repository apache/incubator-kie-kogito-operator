apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kogitodataindices.app.kiegroup.org
spec:
  group: app.kiegroup.org
  names:
    kind: KogitoDataIndex
    listKind: KogitoDataIndexList
    plural: kogitodataindices
    singular: kogitodataindex
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: KogitoDataIndex is the Schema for the kogitodataindices API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KogitoDataIndexSpec defines the desired state of KogitoDataIndex
          properties:
            cpuLimit:
              description: CPULimit is the limit of CPU for the container
              type: string
            cpuRequest:
              description: CPURequest is the request of CPU for the container
              type: string
            env:
              additionalProperties:
                type: string
              description: Env is a collection of additional environment variables
                to add to the Data Index container
              type: object
            httpPort:
              description: HttpPort will set the environment env KOGITO_DATA_INDEX_HTTP_PORT
                to define which port data-index service will listen internally.
              format: int32
              type: integer
            image:
              description: Image to use for this service
              type: string
            infinispan:
              description: Has the data used by the service to connect to the Infinispan
                cluster.
              properties:
                authRealm:
                  description: Name of the Infinispan authentication realm. This sets
                    the property infinispan.client.hotrod.auth_realm.
                  type: string
                credentials:
                  description: SecretCredentialsType is the data structure for specifying
                    credentials within a Secret
                  properties:
                    passwordKey:
                      description: PasswordKey is the key pointing to a value in a
                        Secret holding the password value
                      type: string
                    secretName:
                      description: SecretName is the name of the secret where the
                        credentials are set
                      type: string
                    usernameKey:
                      description: UsernameKey is the key pointing to a value in a
                        Secret holding the username value
                      type: string
                  type: object
                saslMechanism:
                  description: SaslMechanism defined for the authentication. This
                    sets the property infinispan.client.hotrod.sasl_mechanism.
                  enum:
                  - PLAIN
                  - DIGEST-MD5
                  type: string
                uri:
                  description: URI to connect to the Infinispan cluster (can it be
                    an internal service or external URI), for example, myinfinispan-cluster:11222
                  type: string
                useAuth:
                  description: UseAuth is set to true if the credentials are set.
                    This also sets the property infinispan.client.hotrod.use_auth.
                  type: boolean
                useKogitoInfra:
                  description: UseKogitoInfra flags if the instance will use a provided
                    infrastructure by KogitoInfra CR. Setting this to true will deploy
                    a new KogitoInfra CR into the namespace that will install Infinispan
                    via Infinispan Operator. Infinispan Operator MUST be installed
                    in the namespace for this to work. On OpenShift, OLM should install
                    it for you. If running on Kubernetes without OLM installed, please
                    install Infinispan Operator first. Set this to false and fill
                    all other properties to provide your own infrastructure
                  type: boolean
              type: object
            kafka:
              description: Has the data used by the service to connect to the Kafka
                cluster.
              properties:
                externalURI:
                  description: URI is the service URI to connect to the Kafka cluster,
                    for example, my-cluster-kafka-bootstrap:9092
                  type: string
                instance:
                  description: Instance is the Kafka instance to be used, for example,
                    kogito-kafka
                  type: string
                useKogitoInfra:
                  description: UseKogitoInfra flags if the instance will use a provided
                    infrastructure by KogitoInfra CR. Setting this to true will configure
                    a KogitoInfra CR to install Kafka via Strimzi Operator. Strimzi
                    Operator MUST be installed in the namespace for this to work.
                    On OpenShift, OLM should install it for you. If running on Kubernetes
                    without OLM installed, please install Strimzi Operator first.
                    Set this to false and fill other properties to provide your own
                    infrastructure
                  type: boolean
              type: object
            memoryLimit:
              description: MemoryLimit is the limit of Memory for the container
              type: string
            memoryRequest:
              description: MemoryRequest is the request of Memory for the container
              type: string
            replicas:
              description: Replicas is the number of pod replicas that the Data Index
                Service will create
              format: int32
              maximum: 100
              minimum: 0
              type: integer
          type: object
        status:
          description: KogitoDataIndexStatus defines the observed state of KogitoDataIndex
          properties:
            conditions:
              description: OK when all resources are created successfully
              items:
                description: DataIndexCondition indicates the possible conditions
                  for the Data Index Service
                properties:
                  condition:
                    description: DataIndexConditionType indicates the possible status
                      that the resource can have
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                required:
                - condition
                type: object
              type: array
            dependenciesStatus:
              description: All dependencies OK means that everything was found within
                the namespace
              items:
                description: DataIndexDependenciesStatus indicates all possible statuses
                  that the dependencies can have
                type: string
              type: array
            deploymentStatus:
              description: Status of the Data Index Service Deployment created and
                managed by it
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this deployment.
                  format: int32
                  type: integer
                collisionCount:
                  description: Count of hash collisions for the Deployment. The Deployment
                    controller uses this field as a collision avoidance mechanism
                    when it needs to create the name for the newest ReplicaSet.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a deployment's
                    current state.
                  items:
                    description: DeploymentCondition describes the state of a deployment
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: The generation observed by the deployment controller.
                  format: int64
                  type: integer
                readyReplicas:
                  description: Total number of ready pods targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this deployment.
                    This is the total number of pods that are still required for the
                    deployment to have 100% available capacity. They may either be
                    pods that are running but not yet available or pods that still
                    have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    deployment that have the desired template spec.
                  format: int32
                  type: integer
              type: object
            route:
              description: Route is where the service is exposed
              type: string
            serviceStatus:
              description: Status of the Data Index Service created and managed by
                it
              properties:
                loadBalancer:
                  description: LoadBalancer contains the current status of the load-balancer,
                    if one is present.
                  properties:
                    ingress:
                      description: Ingress is a list containing ingress points for
                        the load-balancer. Traffic intended for the service should
                        be sent to these ingress points.
                      items:
                        description: 'LoadBalancerIngress represents the status of
                          a load-balancer ingress point: traffic intended for the
                          service should be sent to an ingress point.'
                        properties:
                          hostname:
                            description: Hostname is set for load-balancer ingress
                              points that are DNS based (typically AWS load-balancers)
                            type: string
                          ip:
                            description: IP is set for load-balancer ingress points
                              that are IP based (typically GCE or OpenStack load-balancers)
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
